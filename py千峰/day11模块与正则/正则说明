1、正则表达式的定义：
正则表达式是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，
组成一个”规则字符串“，这个规则字符串用来表达对字符串一种过滤效果
就是对输入内容合法性的验证
例：登录QQ号码
验证：1、长度     2、是否0开头

正则表达式是对字符串（包括普通字符（例如，a-z之间的字母））和特殊字符（称为‘元字符’）操作
的一种逻辑公式，就是用事先定义好的特定字符、及这些特定的字符的组合，组成一个规则字符串，这个
规则字符串用来表达对字符串的一种过滤逻辑。正则表达式是一种文本模式，模式描述在搜索文本时要匹配的
一个或多个字符串。

正则表达式，又称正规表示式、正规表示法、正规表达式、规则表达式、常规表示法
（英语：Regular Expression）


2、正则表达式的作用和特点：
给定一个正则表达式和一个字符串，我们可以达到如下目的：
1、给定的字符串是否符合正则表达式的过滤逻辑（称作‘匹配’）
2、可以通过正则表达式，从字符串中获取我们想要的特定部分。

正则表达式的特点：
1、灵活性、逻辑性和功能性非常强
2、可以迅速的用极简单的方式达到字符串的复杂控制
3、对于刚刚接触的人来说，比较晦涩难懂

场景;
如何判断一个字符串是手机号呢？

判断邮箱为163或者126的所有邮件地址

在python中，想要使用这正则表达式，必须使用一个模块
python re模块：

\A:表示从字符串的开始处匹配
\Z:表示从字符串的结束处匹配，如果存在换行，只匹配到换行前的结束字符串
\b:匹配一个单词边界，也就是指单词和空格间的位置。
例如：'py\b'可以匹配"python"中的'py',但不能匹配‘openpyx1’中的‘py’

\B:匹配非单词边界，'py\b'可以匹配"openpyx1"中的'py',但不能匹配‘python’中的‘py’

\d:匹配任意数字，等价于[0-9]  digit

\D:匹配任意非数字字符，等价于[^\d]

\s:匹配任意空白字符，等价于[\t\n\r\f]   space

\S:匹配任意非空白字符，等价于[^\s]

\w:匹配任意字母数字及下划线，等价于[a-zA-Z0-9]

\W:匹配任意非字母数字及下划线，等价于[^\w]

\\:匹配原义的反斜杠\


'.'：用于匹配除换行符（\n）之外的所有字符
'^':用于匹配字符串的开始，即行首
'$':用于匹配字符串的末尾（末尾如果有换行符\n，就匹配\n前面的那个字符），即行尾
